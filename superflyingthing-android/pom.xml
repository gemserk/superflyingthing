<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.gemserk.games.superflyingthing</groupId>
		<artifactId>superflyingthing</artifactId>
		<version>0.0.7-SNAPSHOT</version>
	</parent>

	<groupId>com.gemserk.games.superflyingthing</groupId>
	<artifactId>superflyingthing-android</artifactId>
	<version>0.0.7-SNAPSHOT</version>
	<packaging>apk</packaging>

	<name>Super Flying Thing Prototype - Android Version</name>
	<description>Android version of Super Flying Thing Prototype</description>

	<properties>
		<!-- set a custom format that is guaranteed to grow as a Long number, so 
			it can be used as version code in the AndroidManifest.xml -->
		<maven.build.timestamp.format>yyMMdddHHmm</maven.build.timestamp.format>
		<!-- this trick of loading build timestamp into other property is necessary 
			due to http://jira.codehaus.org/browse/MRESOURCES-99 and also more readable -->
		<versionCode>${maven.build.timestamp}</versionCode>
	</properties>

	<build>
		<sourceDirectory>src</sourceDirectory>
		<finalName>superflyingthing-android</finalName>

		<resources>
			<resource>
				<directory>../superflyingthing-desktop/src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>version.properties</include>
				</includes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>com.googlecode.mavennatives</groupId>
				<artifactId>maven-nativedependencies-plugin</artifactId>
				<version>0.0.5</version>
				<configuration>
					<nativesTargetDir>libs</nativesTargetDir>
					<separateDirs>true</separateDirs>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-jarsigner-plugin</artifactId>
				<version>1.2</version>
			</plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4.3</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.jayway.maven.plugins.android.generation2</groupId>
				<artifactId>maven-android-plugin</artifactId>
				<version>2.9.0-beta-4</version>
				<configuration>
					<sdk>
						<path>${env.ANDROID_HOME}</path>
						<platform>8</platform>
					</sdk>
					<zipalign>
						<verbose>true</verbose>
					</zipalign>
					<deleteConflictingFiles>true</deleteConflictingFiles>
					<extractDuplicates>true</extractDuplicates>
					<undeployBeforeDeploy>true</undeployBeforeDeploy>
					<assetsDirectory>../superflyingthing-desktop/src/main/resources</assetsDirectory>
					<jvmArguments>
						<argument>-Xmx300m</argument>
					</jvmArguments>
				</configuration>
				<extensions>true</extensions>
				<executions>
					<execution>
						<id>alignApk</id>
						<phase>package</phase>
						<goals>
							<goal>zipalign</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.5</version>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.0-beta-4</version>
			</plugin>

            <plugin>
                <groupId>com.pyx4me</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>proguard</goal>
                        </goals>
                    </execution>
                </executions>
                <!-- we need to override the dependency of the plugin to get a newer version of proguard -->
                <dependencies>
                    <dependency>
                        <groupId>net.sf.proguard</groupId>
                        <artifactId>proguard</artifactId>
                        <version>4.4</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
                <configuration>
                    <proguardVersion>4.4</proguardVersion>
                    <maxMemory>256m</maxMemory>
                    <injar>android-classes</injar>
                    <libs>
                        <lib>${rt.jar.path}</lib>
                        <lib>${jsse.jar.path}</lib>
                    </libs>
                    <skip>false</skip>
                    <obfuscate>true</obfuscate>
                    <addMavenDescriptor>false</addMavenDescriptor>
                    <options>
                        <!-- which classes are we keeping around, android specific -->
                        <option>-keep public class * extends android.app.Activity</option>
                        <option>-keep public class * extends android.app.Application</option>
                        <option>-keep public class * extends android.app.Service</option>
                        <option>-keep public class * extends android.content.BroadcastReceiver</option>
                        <option>-keep public class * extends android.content.ContentProvider</option>
                        <option><![CDATA[-keep public class * extends android.view.View {
                            public <init>(android.content.Context);
                            public <init>(android.content.Context, android.util.AttributeSet);
                            public <init>(android.content.Context, android.util.AttributeSet, int);
                            public void set*(...);  }]]></option>
                        <option><![CDATA[-keepclasseswithmembers class * {
                            public <init> (android.content.Context, android.util.AttributeSet); } ]]></option>
                        <option><![CDATA[-keepclasseswithmembers class * {
                            public <init> (android.content.Context, android.util.AttributeSet, int); } ]]></option>
                        <option><![CDATA[-keepclassmembers class * implements android.os.Parcelable {
                            static android.os.Parcelable$Creator *; } ]]></option>
                        <option><![CDATA[-keepclassmembers class **.R$* { public static <fields>; } ]]></option>
                        <option><![CDATA[-keepclasseswithmembernames class * { native <methods>; } ]]></option>
                        <option><![CDATA[-keepclassmembers class * extends java.lang.Enum {
                            public static **[] values();
                            public static ** valueOf(java.lang.String); } ]]></option>
                        <option><![CDATA[-keepclassmembers class * extends android.app.Activity{
                            public void *(android.view.View); } ]]></option>

                        <!-- general proguard options -->
                        <option>-dontskipnonpubliclibraryclasses</option>
                        <!--<option>-dontusemixedcaseclassnames</option>-->
                        <!--<option>-dontskipnonpubliclibraryclassmembers</option>-->
                        <!--<option>-allowaccessmodification</option>-->

                        <!-- you really should NOT avoid warning but it can be helpful when testing options -->
                        <option>-ignorewarnings</option>
                        <option>-verbose</option>

                        <!-- next options are necessary to decipher stack traces with retrace later,
                         relies on the map file created -->
                        <option>-renamesourcefileattribute SourceFile</option>
                        <option>-keepattributes SourceFile,LineNumberTable</option>

                         <!---keepattributes-->
                <!--SourceFile,LineNumberTable,*Annotation*-->

                        <!-- Optimization related settings -->
                        <!--<option>-dontoptimize</option>-->
                        <option>-optimizationpasses 3</option>
                        <!-- The -optimizations option disables some arithmetic simplifications that Dalvik 1.0
                         and 1.5 can't handle. -->
                        <option>-optimizations !code/simplification/arithmetic</option>
                    </options>
                </configuration>
            </plugin>

		</plugins>
	</build>

	<profiles>
        <!-- to avoid having to do symlinks to rt.jar like documented e.g. here
            http://bruehlicke.blogspot.com/2009/11/missing-rtjar-mac-os-x-using-proguard.html
            http://codebistro.com/2010/07/18/proguard-and-runtime-libraries-on-mac-os-x/
            -->
		<!-- needed by maven proguard plugin -->
        <profile>
            <id>linux</id>
            <activation>
                <os>
                    <family>unix</family>
                </os>
            </activation>
            <properties>
                <rt.jar.path>${env.JAVA_HOME}/jre/lib/rt.jar</rt.jar.path>
                <jsse.jar.path>${env.JAVA_HOME}/jre/lib/jsse.jar</jsse.jar.path>
            </properties>
        </profile>

		<profile>
			<!-- the release profile does sign, proguard, zipalign ... but does not 
				run instrumentation tests -->
			<id>release</id>
			<!-- via this activation the profile is automatically used when the release 
				is done with the maven release plugin -->
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jarsigner-plugin</artifactId>
						<executions>
							<execution>
								<id>signing</id>
								<goals>
									<goal>sign</goal>
									<goal>verify</goal>
								</goals>
								<phase>package</phase>
								<inherited>true</inherited>
								<configuration>
									<removeExistingSignatures>true</removeExistingSignatures>
									<archiveDirectory />
									<includes>
										<include>${project.build.directory}/${project.artifactId}.apk</include>
									</includes>
									<keystore>${sign.keystore}</keystore>
									<alias>${sign.alias}</alias>
									<storepass>${sign.storepass}</storepass>
									<keypass>${sign.keypass}</keypass>
									<verbose>true</verbose>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<configuration>
							<artifacts>
								<artifact>
									<file>${project.build.directory}/${project.artifactId}-signed-aligned.apk</file>
									<type>apk</type>
									<classifier>signed-aligned</classifier>
								</artifact>
							</artifacts>
						</configuration>
						<executions>
							<execution>
								<id>attach-signed-aligned</id>
								<phase>package</phase>
								<goals>
									<goal>attach-artifact</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>

		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-legacy</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-junit4</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.ads.admob</groupId>
			<artifactId>admob</artifactId>
			<version>${admob.version}</version>
		</dependency>
		<dependency>
			<groupId>com.adwhirl.adwhirl</groupId>
			<artifactId>adwhirl</artifactId>
			<version>${adwhirl.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.android</groupId>
			<artifactId>android</artifactId>
			<version>2.2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>superflyingthing-core</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.gemserk.commons.gdx</groupId>
			<artifactId>commons-gdx-android</artifactId>
			<version>${commons.gdx.version}</version>
		</dependency>
		<dependency>
			<groupId>com.badlogic.gdx</groupId>
			<artifactId>gdx-backend-android</artifactId>
			<version>${gdx.version}</version>
		</dependency>
		<dependency>
			<groupId>com.gemserk.analytics.googleanalytics</groupId>
			<artifactId>jgoogleanalyticstracker-android</artifactId>
		</dependency>
		<dependency>
			<groupId>com.gemserk.datastore</groupId>
			<artifactId>datastore-android</artifactId>
			<version>${datastore.version}</version>
		</dependency>
		<!-- <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-android</artifactId> 
			<version>1.6.1-RC1</version> </dependency> -->
	</dependencies>
</project>
